aggr-json: |
  // tag::aggr-json[]
  [
    {
      "unify": [
        {
          "from": "customers",
          "bind": [
            { "xt$id": { "xt:lvar": "customerId" } },
            { "name": {"xt:lvar": "customerName" } }
          ]
        },
        {
          "from": "orders",
          "bind": [
           { "customerId": {"xt:lvar": "customerId"} },
           { "orderValue": { "xt:lvar": "orderValue"} }
          ]
        }
      ]
    },
    {
      "aggregate": [
        "customerId",
        "customerName",
        { "orderCount": { "xt:call": "row-count", "args": []}},
        { "totalValue": { "xt:call": "sum", "args": [ { "xt:lvar": "orderValue" } ] }}
      ]
    }
  ]
  // end::aggr-json[]

from-json: |
  // tag::from-json[]
  //`SELECT username, first_name, last_name FROM users`
  {
    "from": "users",
    "bind": [ "username", "first-name", "last-name" ]
  }
  // `SELECT username AS login, first_name, last_name FROM users`
  {
    "from": "users",
    "bind": [ { "username": { "xt:lvar": "login" } }, "first-name", "last-name" ]
  }
  // `SELECT first_name, last_name FROM users WHERE username = 'james'`
  {
    "from": "users",
    "bind": [ { "username": "james" }, "first-name", "last-name" ]
  }
  // `SELECT first_name, last_name FROM users WHERE username = ?`
  {
    "from": "users",
    "bind": [ { "username": { "xt:param": "$username" } }, "first-name", "last-name" ]
  }
  // end::from-json[]

from-star-json: |
  // tag::from-star-json[]
  // `SELECT * FROM users`
  {
    "from": "users",
    "projectAllCols": true
  }
  // `SELECT *, username AS login FROM users`
  {
    "from": "users",
    "bind": [ { "username": { "xt:lvar": "login" } } ],
    "projectAllCols": true
  }
  // end::from-star-json[]

star-invalid-json: |
  // tag::star-invalid-json[]
  {
    "unify": [
      {
        "from": "users",
        "projectAllCols": true
      },
      {
        "from": "customers",
        "projectAllCols": true
      }
    ]
  }
  // end::star-invalid-json[]

temporal-filters-json: |
  // tag::temporal-filters-json[]
  {
    "from": "users",
    "bind": [ { "xt$id" : { "xt:lvar": "user"} } ],
    "forValidTime": {
      "in": [
        { "@type": "xt:instant", "@value": "2020-01-01T00:00:00Z" },
        { "@type": "xt:instant", "@value": "2021-01-01T00:00:00Z" }
      ]
    },
    "forSystemTime": { "at": { "@type": "xt:instant", "@value": "2023-01-01T00:00:00Z" } }
  }
  // end::temporal-filters-json[]

joins-json: |
  // tag::joins-json[]
  {
    "unify": [
      {
        "from": "customers",
        "bind": [ { "xt$id": { "xt:lvar": "customerId" } }, "customerName" ]
      },
      {
        "leftJoin": {
          "from": "orders",
          "bind": [{ "xt$id": { "xt:lvar": "orderId"}}, "customerId", "orderValue" ]
        },
        "bind": [ "customerId", "orderId", "orderValue" ]
      }
    ]
  }
  // end::joins-json[]

limit-json: |
  // tag::limit-json[]
  [
    {
      "from": "users",
      "bind": [ "username" ]
    },
    { "orderBy": ["username"] },
    { "limit": 10 }
  ]
  // end::limit-json[]

offset-json: |
  // tag::offset-json[]
  [
    {
      "from": "users",
      "bind": ["username"]
    },
    { "orderBy": ["username"] },
    { "offset": 10 },
    { "limit": 10 }
  ]
  // end::offset-json[]

order-by-json: |
  // tag::order-by-json[]
  [
    {
      "from": "orders",
      "bind": [ "orderValue", "receivedAt" ]
    },
    {
      "orderBy": [
        { "val": { "xt:lvar": "orderValue" }, "dir": "desc", "nulls": "last" },
        "received-at"
      ]
    }
  ]
  // end::order-by-json[]

return-json: |
  // tag::return-json[]
  [
    {
      "from": "users",
      "bind": [ "username", "firstName", "lastName" ]
    },
    {
      "return": [
        "username",
        {
          "full-name": {
            "xt:call": "concat",
            "args": [ { "xt:lvar": "lastName" }, ", ", { "xt:lvar": "firstName" } ]
          }
        }
      ]
    }
  ]
  // end::return-json[]

rel-json: |
  // tag::rel-json[]
  // as a literal
  {
    "rel": [ {"a": 1, "b": 2 }, { "a": 3, "b": 4 } ],
    "bind": [ "a", "b" ]
  }

  // from a parameter
  {
    "query" : {
      "rel": { "xt:param": "$t" },
      "bind": [ "a", "b" ]
    }
   "queryOpts": { "args": { "t": [ { "a": 1, "b": 2 }, { "a": 3, "b": 4 } ] } }
  }
  // end::rel-json[]

unify-json: |
  // tag::unify-json[]
  {
    "unify": [
      {
        "from": "customers",
        "bind": [ { "xt$id": { "xt:lvar": "customerId" } }, "customerName" ]
      },
      {
        "from": "orders",
        "bind": [ { "xt$id": { "xt:lvar": "orderId" } }, "customerId", "orderValue" ]
      }
    ]
  }
  // end::unify-json[]

unnest-json: |
  // tag::unnest-json[]
  // as a 'tail' operator - N.B. `tag` is a column being added
  [
    {
      "from": "posts",
      "bind": [ { "xt$id": { "xt:lvar": "postId" } }, "tags" ]
    },
    { "unnest": { "tag": { "xt:lvar": "tags" } } }
  ]

  // in `unify` - N.B. `tag` is a logic var being introduced
  {
    "unify": [
      {
        "from": "posts",
        "bind": [ { "xt$id": { "xt:lvar": "postId" } }, "tags" ]
      },
      { "unnest": { "tag": { "xt:lvar": "tags" } } }
    ]
  }
  // end::unnest-json[]

where-json: |
  // tag::where-json[]
  // as a 'tail' operator
  [
    {
      "from": "users",
      "bind": [ "username", "dateOfBirth" ]
    },
    {
      "where": [
        {
          "xt:call": ">",
          "args": [
            { "xt:call": "current-timestamp" },
            {
              "xt:call": "+",
              "args": [
                { "xt:lvar": "dateOfBirth" },
                { "@type": "xt:period", "@value": "P18Y" }
              ]
            }
          ]
        }
      ]
    }
  ]

  // in `unify`
  {
    "unify": [
      {
        "from": "customers",
        "bind": [ { "xt$id": { "xt:lvar": "customerId" } }, "customerName", "vip?" ]
      },
      {
        "from": "orders",
        "bind": [ { "xt/id": { "xt:lvar": "orderId" } }, "customerId", "orderValue" ]
      },
      {
        "where": [
          {
            "xt:call": "or",
            "args": [
              { "xt:lvar": "vip?" },
              {
                "xt:call": ">",
                "args": [ { "xt:lvar": "orderValue" }, 1000000 ]
              }
            ]
          }
        ]
      }
    ]
  }
  // end::where-json[]

with-json: |
  // tag::with-json[]
  // as a 'tail' operator - N.B. `fullName` is a column here
  [
    {
      "from": "users",
      "bind": [ "username", "firstName", "lastName" ]
    },
    {
      "with": [
        {
          "fullName": {
            "xt:call": "concat",
            "args": [ { "xt:lvar": "lastName" }, ", ", { "xt:lvar": "firstName" } ]
          }
        }
      ]
    }
  ]
  // in 'unify' - N.B. `fullName` is a logic variable here
  {
    "unify": [
      {
        "from": "users",
        "bind": [ "username", "firstName", "lastName" ]
      },
      {
        "with": [
          {
            "fullName": {
              "xt:call": "concat",
              "args": [ { "xt:lvar": "lastName" }, ", ", { "xt:lvar": "firstName" } ]
            }
          }
        ]
      }
    ]
  }
  // end::with-json[]

without-json: |
  // tag::without-json[]
  [
    {
      "unify": [
        {
          "from": "customers",
          "bind": [ { "xt$id": { "xt:lvar": "customerId" } }, "customerName" ]
        },
        {
          "from": "orders",
          "bind": [ "customerId", "orderValue" ]
        }
      ]
    },
    { "without": [ "customerId" ] }
  ]
  // end::without-json[]

expr-json-1: |
  // tag::expr-json-1[]
  [
    {
      "from": "posts",
      "bind": [ { "xt$id": { "xt:param": "$postId" } }, "authorId" ]
    },
    {
      "with": [
        {
          "author": {
            "xt:pull": {
              "from": "authors",
              "bind": [ { "xt$id": { "xt:param": "$authorId" } }, "firstName", "lastName" ]
            },
            "args": [ "authorId" ]
          }
        },
        {
          "comments": {
            "xt:pullMany": [
              {
                "from": "comments",
                "bind": [ { "postId": { "xt:param": "$postId" } }, "comment", "postedAt" ]
              },
              { "orderBy": [ "postedAt" ] },
              { "limit": 2 },
              { "return": [ "comment" ] }
            ],
            "args": [ { "postId": { "xt:param": "$postId" } } ]
          }
        }
      ]
    },
    { "return": [ "postContent", "authot", "comments" ] }
  ]
  // end::expr-json-1[]

binding-json-1: |
  // tag::binding-json-1[]
  {
    "from": "users",
    "bind": [ "username", "firstName", "lastName" ]
  }
  // i.e. `SELECT username, first_name, last_name FROM users`
  // end::binding-json-1[]

binding-json-2: |
  // tag::binding-json-2[]
  {
    "from": "users",
    "bind": [ { "username": {"xt:lvar": "login" } } , "firstName", "lastName"]
  }
  // i.e. `SELECT username AS login, first_name, last_name FROM users`
  // end::binding-json-2[]

binding-json-3: |
  // tag::binding-json-3[]
  {
    "from": "users",
    "bind": [ { "username": "james" } , "firstName", "lastName" ]
  }
  // i.e. `SELECT first_name, last_name FROM users WHERE username = 'james'`

  {
    "from": "users",
    "bind": [ { "username": { "xt:param": "$username" } } , "firstName", "lastName" ]
  }
  // i.e. `SELECT first_name, last_name FROM users WHERE username = ?`
  // end::binding-json-3[]

argument-json-1: |
  // tag::argument-json-1[]
  // find the most recent 5 posts and, for each, their most recent 3 comments

  // in this query, the `postId` argument fulfils the `$postId` parameter in the sub-query
  [
    {
      "from": "posts",
      "bind": [ {"xt$id": {"xt:lvar": "postId"}} ... ]
    },
    {
      "with": [
        {
          "comments": {
            "xt:pullMany": [
              {
                "from": "comments",
                "bind": [ { "postId": { "xt:param": "$postId" } }, "comment", "commentedAt" ]
              },
              { "limit": 3 }
            ],
            "args": [ "postId" ]
          }
        }
      ]
    }
  ]
  // end::argument-json-1[]

argument-json-2: |
  // tag::argument-json-2[]
  // find everybody and, for those who have them, their siblings

  // in this query, the `person` argument fulfils the `$person` parameter in the sub-query;
  // `sibling` and `parent` (in `bind`) are joined on the way out.
  [
    {
      "unify": [
        {
          "from": "people",
          "bind": [ { "xt$id": {"xt:lvar": "person"}}, "parent" ]
        },
        {
          "leftJoin": [
            {
              "from": "people",
              "bind": [ { "xt$id": { "xt:lvar": "sibling" } }, "parent" ]
            },
            {
              "where": [
                {
                  "xt:call": "<>",
                  "args": [ { "xt:param": "$person" }, { "xt:lvar": "sibling" } ]
                }
              ]
            }
          ],
          "args": [ "person" ],
          "bind": [ "sibling", "parent" ]
        }
      ]
    },
    { "return": [ "person", "sibling" ] }
  ]
  // tag::argument-json-2[]
